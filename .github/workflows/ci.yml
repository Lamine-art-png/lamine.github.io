name: CI - Build & Push API image

on:
  push:
    branches: [ main ]
    paths:
      - 'agroai_api/**'
      - 'Dockerfile'
      - '.github/workflows/ci.yml'
      - 'README.md'   # temp trigger
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  ECR_REPO: agroai-manulife-pilot-api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Resolve account & ECR URI
        id: acct
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_OUTPUT
          echo "ECR_URI=$ACCOUNT_ID.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}" >> $GITHUB_OUTPUT

      - name: Ensure ECR repo exists
        run: |
          aws ecr describe-repositories --repository-names "${{ env.ECR_REPO }}" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "${{ env.ECR_REPO }}" >/dev/null

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS --password-stdin ${{ steps.acct.outputs.ECR_URI }}

      - name: Build image
        run: |
          docker build -t ${{ env.ECR_REPO }}:sha-${{ github.sha }} .

      - name: Tag & push
        run: |
          docker tag  ${{ env.ECR_REPO }}:sha-${{ github.sha }}  ${{ steps.acct.outputs.ECR_URI }}:sha-${{ github.sha }}
          docker push ${{ steps.acct.outputs.ECR_URI }}:sha-${{ github.sha }}

      - name: Image pushed
        run: echo "Pushed -> ${{ steps.acct.outputs.ECR_URI }}:sha-${{ github.sha }}"
