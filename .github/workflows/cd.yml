name: CD - Terraform apply (us-west-1)

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/cd.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  group: tf-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: us-west-1
  AWS_DEFAULT_REGION: us-west-1

jobs:
  tf_apply:
    name: Terraform init/plan/apply
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: us-west-1

      # 🔍 Debug BEFORE init: prove the ECR resource is in this checkout
      - name: Sanity: show repo state & ECR resource
        run: |
          echo "Commit: $(git rev-parse --short HEAD)"
          echo "PWD=$(pwd)"
          echo "Listing terraform dir:"
          ls -la
          echo "--- grep for ECR resource ---"
          grep -nR 'resource "aws_ecr_repository" "api"' . || true
          echo "--- first 220 lines of main.tf ---"
          nl -ba main.tf | sed -n '1,220p' || true
          echo "--- AWS identity ---"
          aws sts get-caller-identity
          echo "--- (non-fatal) backend checks ---"
          aws s3api get-bucket-location --bucket agroai-tfstate-ld-usw1-1761768239 || true
          aws dynamodb describe-table --table-name tf-locks --region us-west-1 || true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform init (reconfigure)
        run: terraform init -reconfigure -input=false

      - name: Terraform fmt (auto-fix)
        run: terraform fmt -recursive

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -out=tfplan -input=false

      - name: Terraform apply
        run: terraform apply -input=false -auto-approve tfplan

      - name: Collect & publish outputs
        run: |
          terraform output -json | tee tf-outputs.json
          echo "## Terraform Outputs" >> $GITHUB_STEP_SUMMARY
          jq -r 'to_entries[] | "- \(.key): \(.value.value // \"null\")"' tf-outputs.json >> $GITHUB_STEP_SUMMARY

      - name: Upload outputs artifact
        uses: actions/upload-artifact@v4
        with:
          name: tf-outputs
          path: terraform/tf-outputs.json
          retention-days: 5
